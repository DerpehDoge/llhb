@import url("https://fonts.googleapis.com/css2?family=Kumbh+Sans&display=swap");

html {
  background-color: #020305;
  color: white;
  font-family: "Kumbh Sans", monospace;
}

body, html {
  height: 100%;
  margin: 0;
  text-align: center;
}

body {
  overflow: none;
  display: flex;
  align-items: center;
  justify-content: center;
}

input {
  text-align: center;
  font-family: "Kumbh Sans", monospace;
  height: 40px;
  width: 20vw;
  color: white;
  background-color: transparent;
  border: 0;
  border-bottom: 2px solid white;
  transition: all 0.25s ease-in-out;
}

input:hover {
  border-bottom: 2px solid #AAA;
}

input:focus {
  outline: none;
  border: none;
  border-bottom: 2px solid #599;
}

@media only screen and (max-width: 400px) {
  input {
    font-size: 1em;
    transition: all 0.5s ease-in-out;
  }
}

@media only screen and (min-width: 400px) {
  input {
    font-size: 1.5em;
    transition: all 0.5s ease-in-out;
  }
}

@mixin glitchCopy { 
		content: attr(data-text);
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
}

.glitch {
	position: relative;
	color: white;
  font-size: 0.75em;
	/* Animation provies a slight random skew. Check bottom of doc
	for more information on how to random skew. */
	
	// Creates a copy before our text. 
	&::before{
		// Duplicates our text with the mixin.
		@include glitchCopy;
		// Scoots text slightly to the left for the color offset.
		left: 2px;
		// Creates the color 'shadow' that happens on the glitch.
		text-shadow: -2px 0 #ff00c1;
		/* Creates an initial clip for our glitch. This works in
		a typical top,right,bottom,left fashion and creates a mask
		to only show a certain part of the glitch at a time. */
		clip: rect(44px, 450px, 56px, 0);
		/* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
		with an alternating animation to keep things fresh. */
		animation: glitch-anim 5s infinite linear alternate-reverse;
	}
	
	// Creates a copy after our text. Note comments from ::before.
	&::after {
		@include glitchCopy;
		left: -2px;
		text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
		animation: glitch-anim2 1s infinite linear alternate-reverse;
	}
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}